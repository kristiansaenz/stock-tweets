{"ast":null,"code":"var _jsxFileName = \"/Users/kristian/Desktop/codebase/stock-tweets/client/src/pages/Home.js\";\nimport React from 'react';\nimport SearchBar from '../components/SearchBar';\nimport TweetBoard from '../components/TweetBoard';\nimport TagList from '../components/TagList';\nimport axios from 'axios';\nimport uuid from 'uuid';\nimport Footer from '../components/Footer';\n\nclass Home extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      stock: 'MSFT',\n      tags: [{\n        id: 1,\n        name: \"MSFT\",\n        clicked: false\n      }, {\n        id: 2,\n        name: \"BABA\",\n        clicked: false\n      }],\n      tweets: []\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      this.addTag(this.state.stock);\n      this.clearInput();\n    };\n\n    this.deleteTag = (id, name) => {\n      this.setState({\n        tags: [...this.state.tags.filter(tag => tag.id !== id)]\n      });\n      this.getTweets();\n    };\n\n    this.clickTag = id => {\n      this.getTweetOnClick(id);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      class: \"hero is-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"hero-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      class: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Stock Tweets\"), React.createElement(\"h2\", {\n      class: \"subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"See the latest tweets on your favorite stocks!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"nav\", {\n      class: \"level\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"level-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"level-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      onSubmit: this.onSubmit,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      class: \"level-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"level-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"tags\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(TagList, {\n      tags: this.state.tags,\n      deleteTag: this.deleteTag,\n      clickTag: this.clickTag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })))))))), React.createElement(\"div\", {\n      class: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"tile is-ancestor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"tile is-vertical\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"tile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(TweetBoard, {\n      tweets: this.state.tweets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })))))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));\n  }\n\n  addTag(stock) {\n    const newTag = {\n      id: uuid.v4(),\n      name: stock,\n      clicked: false\n    };\n    this.setState({\n      tags: [...this.state.tags.concat(newTag)]\n    });\n    this.getTweets();\n  }\n\n  clearInput() {\n    this.setState({\n      stock: ''\n    });\n  }\n\n  onChange(e) {\n    this.setState({\n      stock: e.target.value\n    });\n  } // always renders last stock in taglist\n\n\n  getTweets() {\n    var lastAdded = this.state.tags[this.state.tags.length - 1].name;\n    this.fetchTweets(lastAdded);\n  } // always renders stock that is clicked\n\n\n  getTweetOnClick(id) {\n    var clicked = this.state.tags.find(x => x.id === id).name;\n    this.fetchTweets(clicked);\n  } // call GET tweets\n\n\n  async fetchTweets(params) {\n    await axios.get('/tweets', {\n      params: {\n        id: params\n      }\n    }).then(response => {\n      var tweets = response.data.messages;\n      this.setState({\n        tweets: tweets\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  } // show all the tags that don't equal the one you deleted\n  // when you delete tag, tweets based on that stock will disappear\n\n\n  componentDidMount() {\n    this.getTweets();\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/kristian/Desktop/codebase/stock-tweets/client/src/pages/Home.js"],"names":["React","SearchBar","TweetBoard","TagList","axios","uuid","Footer","Home","Component","state","stock","tags","id","name","clicked","tweets","onSubmit","e","preventDefault","addTag","clearInput","deleteTag","setState","filter","tag","getTweets","clickTag","getTweetOnClick","render","onChange","newTag","v4","concat","target","value","lastAdded","length","fetchTweets","find","x","params","get","then","response","data","messages","catch","error","console","log","componentDidMount"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SearchBar from '../components/SearchBar'\nimport TweetBoard from '../components/TweetBoard';\nimport TagList from '../components/TagList';\nimport axios from 'axios';\nimport uuid from 'uuid';\nimport Footer from '../components/Footer';\n\n\nclass Home extends React.Component {\n    state = {\n        stock: 'MSFT',\n        tags: [\n            {id: 1, name: \"MSFT\", clicked: false},\n            {id: 2, name: \"BABA\", clicked: false}\n        ],\n        tweets: []\n    }\n\n    render() {   \n        return(\n            <div>\n            <section class=\"hero is-info\">\n            <div class=\"hero-body\">\n                <div class=\"container\">\n                    {/* header */}\n                    <h1 class=\"title\">Stock Tweets</h1>\n                    <h2 class=\"subtitle\">See the latest tweets on your favorite stocks!</h2>\n                    <br/>\n\n                    <nav class=\"level\">\n\n                        {/* search field */}\n                        <div class=\"level-left\">\n                            <div class=\"level-item\">\n                                <SearchBar onSubmit={this.onSubmit} onChange={this.onChange} />\n                            </div>\n                        </div>\n                        \n                        {/* taglist */}\n                        <div class=\"level-right\">\n                            <div class=\"level-item\">\n                                <div class=\"tags\">\n                                <TagList tags={this.state.tags} deleteTag={this.deleteTag} clickTag={this.clickTag} />\n                                </div>\n                            </div>\n                        </div>\n\n                    </nav>\n                </div>\n            </div>\n            </section>\n\n            {/* tweets section */}\n            <div class=\"section\">\n                <div class=\"container\">\n                <div class=\"tile is-ancestor\">\n                    <div class=\"tile is-vertical\">\n                        <div class=\"tile\">\n                            <TweetBoard tweets={this.state.tweets} />\n                        </div>\n                    </div>\n                </div>                \n                </div>\n            </div>\n            <Footer />\n            </div>\n)}\n\n    addTag(stock) {\n        const newTag = {\n            id: uuid.v4(),\n            name: stock,\n            clicked: false\n        }\n        this.setState({ tags: [...this.state.tags.concat(newTag)]});\n        this.getTweets();\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.addTag(this.state.stock);\n        this.clearInput();\n    }\n\n    clearInput() {\n        this.setState({ stock: '' });\n    }\n\n    onChange(e) {this.setState({\n        stock: e.target.value\n    })}\n\n    // always renders last stock in taglist\n    getTweets(){\n        var lastAdded = this.state.tags[this.state.tags.length - 1].name;\n        this.fetchTweets(lastAdded);\n    }\n\n    // always renders stock that is clicked\n    getTweetOnClick(id){\n        var clicked = this.state.tags.find(x => x.id === id).name;\n        this.fetchTweets(clicked);\n    }\n\n    // call GET tweets\n    async fetchTweets(params) {\n        await axios.get('/tweets', { params: {id: params} })\n        .then(response => {\n            var tweets = response.data.messages;\n            this.setState({ tweets: tweets });\n        })\n        .catch(error => {\n            console.log(error);\n        });\n    }\n\n    // show all the tags that don't equal the one you deleted\n    // when you delete tag, tweets based on that stock will disappear\n    deleteTag = (id, name) => {\n        this.setState({ tags: [...this.state.tags.filter(tag => tag.id !== id)] });\n        this.getTweets();\n    }\n\n    // when you click a tag, it will change dark grey & filter tweets \n    // based on stock names clicked, clicked will be turned to true\n    clickTag = (id) => {\n        this.getTweetOnClick(id);\n    }\n\n    componentDidMount() {\n        this.getTweets();\n    }\n\n}\nexport default Home;"]},"metadata":{},"sourceType":"module"}